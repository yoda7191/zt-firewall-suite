#!/bin/bash

FIREWALL_DIR=$(dirname "$(readlink -f "$0")")/../..
RULES_DIR="$FIREWALL_DIR/rules"
CONFIG_FILE="$FIREWALL_DIR/config/firewall.conf"
ZT_SCRIPT="$FIREWALL_DIR/lib/zt-api.sh"

source "$ZT_SCRIPT" 2>/dev/null || true

usage() {
    echo "Usage: fwctl <command>"
    echo "Commands:"
    echo "  set-rule <rule-name>     Apply a predefined rule set"
    echo "  reload                   Reload current rule set"
    echo "  status                   Show current firewall status"
    echo "  list-rules               List available rule sets"
    exit 1
}

detect_os() {
    case "$(uname -s)" in
        Linux*)     OS=Linux ;;
        Darwin*)    OS=macOS ;;
        *)          OS="Unknown" ;;
    esac
}

load_linux_rules() {
    sudo nft -f "$RULES_DIR/$1.nft"
}

load_macos_rules() {
    ZT_IF=$(ifconfig | grep -A1 'utun\|zt' | head -n1 | awk '{print $1}' | tr -d ':')
    sed "s/zt_if = \"utun3\"/zt_if = \"$ZT_IF\"" "$RULES_DIR/$1.pf" > /tmp/zt-firewall.pf
    sudo pfctl -f /tmp/zt-firewall.pf && sudo pfctl -e
}

case "$1" in
    set-rule)
        RULE_NAME="$2"
        if [ ! -f "$RULES_DIR/$RULE_NAME.nft" ] && [ ! -f "$RULES_DIR/$RULE_NAME.pf" ]; then
            echo "[ERROR] Rule set '$RULE_NAME' not found."
            exit 1
        fi

        detect_os
        if [ "$OS" == "Linux" ]; then
            load_linux_rules "$RULE_NAME"
        elif [ "$OS" == "macOS" ]; then
            load_macos_rules "$RULE_NAME"
        else
            echo "Unsupported OS"
            exit 1
        fi

        echo "[OK] Applied rule set: $RULE_NAME"
        ;;

    reload)
        CURRENT_RULE=$(cat "$CONFIG_FILE" | grep '^CURRENT_RULE=' | cut -d'=' -f2)
        if [ -z "$CURRENT_RULE" ]; then
            echo "[ERROR] No active rule set found."
            exit 1
        fi
        sudo fwctl set-rule "$CURRENT_RULE"
        ;;

    status)
        if command -v nft > /dev/null; then
            sudo nft list ruleset
        elif command -v pfctl > /dev/null; then
            sudo pfctl -s rules
        else
            echo "No supported firewall detected."
        fi
        ;;

    list-rules)
        echo "Available rule sets:"
        for file in "$RULES_DIR"/*.{nft,pf}; do
            basename "$file" | sed 's/\.\(nft\|pf\)$//'
        done | sort | uniq
        ;;

    *)
        usage
        ;;
esac